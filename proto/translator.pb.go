// Code generated by protoc-gen-go. DO NOT EDIT.
// This is a simplified representation of the generated protobuf code.
// In a real implementation, this would be generated using the protoc compiler.

package proto

import (
        context "context"
        grpc "google.golang.org/grpc"
)

// TranslateRequest contains the manuscript image and script type
type TranslateRequest struct {
        ManuscriptImage []byte  `protobuf:"bytes,1,opt,name=manuscript_image,json=manuscriptImage,proto3" json:"manuscript_image,omitempty"`
        ScriptType      string  `protobuf:"bytes,2,opt,name=script_type,json=scriptType,proto3" json:"script_type,omitempty"`
}

// TranslateResponse contains the translation and summary
type TranslateResponse struct {
        OriginalScript string `protobuf:"bytes,1,opt,name=original_script,json=originalScript,proto3" json:"original_script,omitempty"`
        TranslatedText string `protobuf:"bytes,2,opt,name=translated_text,json=translatedText,proto3" json:"translated_text,omitempty"`
        Summary        string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
}

// SummarizeRequest contains the text to summarize
type SummarizeRequest struct {
        Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

// SummarizeResponse contains the generated summary
type SummarizeResponse struct {
        Summary    string `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
        TextLength int32  `protobuf:"varint,2,opt,name=text_length,json=textLength,proto3" json:"text_length,omitempty"`
}

// TranslatorServiceClient is the client API for TranslatorService service.
type TranslatorServiceClient interface {
        // TranslateManuscript translates an ancient manuscript image to modern text
        TranslateManuscript(ctx context.Context, in *TranslateRequest, opts ...grpc.CallOption) (*TranslateResponse, error)
        // SummarizeText generates a summary for translated text
        SummarizeText(ctx context.Context, in *SummarizeRequest, opts ...grpc.CallOption) (*SummarizeResponse, error)
}

// TranslatorServiceServer is the server API for TranslatorService service.
type TranslatorServiceServer interface {
        // TranslateManuscript translates an ancient manuscript image to modern text
        TranslateManuscript(context.Context, *TranslateRequest) (*TranslateResponse, error)
        // SummarizeText generates a summary for translated text
        SummarizeText(context.Context, *SummarizeRequest) (*SummarizeResponse, error)
}

// RegisterTranslatorServiceServer registers the TranslatorServiceServer with a grpc.Server.
func RegisterTranslatorServiceServer(s *grpc.Server, srv TranslatorServiceServer) {
        s.RegisterService(&_TranslatorService_serviceDesc, srv)
}

// _TranslatorService_serviceDesc is the grpc.ServiceDesc for TranslatorService service.
// It's used to register the TranslatorServiceServer implementation.
var _TranslatorService_serviceDesc = grpc.ServiceDesc{
        ServiceName: "translator.TranslatorService",
        HandlerType: (*TranslatorServiceServer)(nil),
        Methods: []grpc.MethodDesc{
                {
                        MethodName: "TranslateManuscript",
                        Handler:    _TranslatorService_TranslateManuscript_Handler,
                },
                {
                        MethodName: "SummarizeText",
                        Handler:    _TranslatorService_SummarizeText_Handler,
                },
        },
        Streams:  []grpc.StreamDesc{},
        Metadata: "translator.proto",
}

// Handler function implementations
func _TranslatorService_TranslateManuscript_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
        in := new(TranslateRequest)
        if err := dec(in); err != nil {
                return nil, err
        }
        return srv.(TranslatorServiceServer).TranslateManuscript(ctx, in)
}

func _TranslatorService_SummarizeText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
        in := new(SummarizeRequest)
        if err := dec(in); err != nil {
                return nil, err
        }
        return srv.(TranslatorServiceServer).SummarizeText(ctx, in)
}
